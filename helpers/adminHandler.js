export const handleAdminCommand = async (sock, from, text, pendingOrders, activeOrders, suppliers, ownerNumber) => {
  if (text.toLowerCase().includes('–¥–æ–±—Ä–æ') || text.toLowerCase().includes('–æ—Ç–∫–∞–∑')) {
    const orderId = Object.keys(pendingOrders).find(id => pendingOrders[id].status === 'waiting');
    if (!orderId) return;

    const order = pendingOrders[orderId];
    if (text.toLowerCase().includes('–¥–æ–±—Ä–æ')) {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –≤—Å–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º
      const orderItems = order.orderText.split('\n');
      const suppliersToNotify = new Map(); // –ò–∑–º–µ–Ω—è–µ–º –Ω–∞ Map –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∏–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ –∏ –∫–∞–∫–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã
      for (const [supplier, data] of Object.entries(suppliers)) {
        const supplierProducts = [];
        for (const product of data.products) {
          for (const orderItem of orderItems) {
            if (orderItem.toLowerCase().includes(product.toLowerCase())) {
              supplierProducts.push(orderItem);
            }
          }
        }
        if (supplierProducts.length > 0) {
          suppliersToNotify.set(supplier, supplierProducts);
        }
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –∫–∞–∂–¥–æ–º—É –ø–æ—Å—Ç–∞–≤—â–∏–∫—É
      for (const [supplier, products] of suppliersToNotify) {
        const supplierNumber = suppliers[supplier].phone + '@s.whatsapp.net';
        if (!supplierNumber) {
          await sock.sendMessage(ownerNumber, { 
            text: `‚ùå *–û—à–∏–±–∫–∞*

–ü–æ—Å—Ç–∞–≤—â–∏–∫ ${supplier} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.` 
          });
          continue;
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –ø–æ—Å—Ç–∞–≤—â–∏–∫—É —Ç–æ–ª—å–∫–æ —Å –µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏
        await sock.sendMessage(supplierNumber, {
          text: `üì¶ *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑*

üè¨ *–ó–∞–≤–µ–¥–µ–Ω–∏–µ:* ${order.location}
üìÖ *–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:* ${order.datetime}

üõí *–ó–∞–∫–∞–∑:*

${products.join('\n')}

‚ùóÔ∏è *–í–∞–∂–Ω–æ:* –ï—Å–ª–∏ –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫—É—é-–ª–∏–±–æ –ø–æ–∑–∏—Ü–∏—é, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –æ–± —ç—Ç–æ–º, —É–∫–∞–∑–∞–≤ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞.

–ü—Ä–∏–º–µ—Ä: *–ù–µ –º–æ–≥—É –ø–æ—Å—Ç–∞–≤–∏—Ç—å: –û–≥—É—Ä—Ü—ã*
–∏–ª–∏
*–ü—Ä–æ–±–ª–µ–º–∞ —Å: –ü–æ–º–∏–¥–æ—Ä—ã, –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å*`
        });
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
      await sock.sendMessage(order.from, { 
        text: `‚úÖ *–ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω*

–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º!

üìã *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ:*
ID: *${orderId}*
üè¨ *–ó–∞–≤–µ–¥–µ–Ω–∏–µ:* ${order.location}
üìÖ *–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:* ${order.datetime}

_–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:_
‚Ä¢ –û—Ç–º–µ–Ω–∞: *–æ—Ç–º–µ–Ω–∞ ${orderId}*
‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: *—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å ${orderId} [–Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –∑–∞–∫–∞–∑–∞]*` 
      });
      
      // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –∑–∞–∫–∞–∑ –≤ –∞–∫—Ç–∏–≤–Ω—ã–µ
      activeOrders[orderId] = order;
      delete pendingOrders[orderId];
    } else {
      await sock.sendMessage(order.from, { 
        text: `‚ùå *–ó–∞–∫–∞–∑ –æ—Ç–∫–ª–æ–Ω–µ–Ω*

–í–∞—à –∑–∞–∫–∞–∑ –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑.` 
      });
      delete pendingOrders[orderId];
    }
    return true;
  }
  return false;
}; 