import { v4 as uuidv4 } from 'uuid';
import { readFileSync } from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import { parseOrder } from './parseOrder.js';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞—Ö
const employeesPath = path.join(__dirname, '../db/employees.json');
const employees = JSON.parse(readFileSync(employeesPath, 'utf8'));

// –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞—Ö
const suppliersPath = path.join(__dirname, '../db/suppliers.json');
const suppliers = JSON.parse(readFileSync(suppliersPath, 'utf8'));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ–¥—É–∫—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
function isProductInDatabase(productName) {
    const normalizedProduct = productName.toLowerCase().trim();
    for (const supplier of suppliers) {
        for (const supplierProduct of supplier.products) {
            if (supplierProduct.toLowerCase().includes(normalizedProduct) || 
                normalizedProduct.includes(supplierProduct.toLowerCase())) {
                return true;
            }
        }
    }
    return false;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑–±–∏–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç—ã
function splitOrderIntoProducts(orderText) {
    // –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ –∑–∞–ø—è—Ç—ã–º, "–∏" –∏ –ø—Ä–æ–±–µ–ª–∞–º
    return orderText
        .split(/[,–∏]/)
        .map(item => item.trim())
        .filter(item => item)
        .map(item => {
            // –ò—â–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (—á–∏—Å–ª–æ –ø–µ—Ä–µ–¥ –∫–≥ –∏–ª–∏ —à—Ç)
            const quantityMatch = item.match(/(\d+)\s*(–∫–≥|—à—Ç)/i);
            if (quantityMatch) {
                const quantity = quantityMatch[1];
                const unit = quantityMatch[2].toLowerCase();
                const productName = item.substring(0, quantityMatch.index).trim();
                return `${productName} ${quantity} ${unit}`;
            }
            return item;
        });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º
function distributeProductsBySupplier(products) {
    const distribution = new Map();
    
    for (const product of products) {
        let found = false;
        for (const supplier of suppliers) {
            for (const supplierProduct of supplier.products) {
                if (supplierProduct.toLowerCase().includes(product.toLowerCase()) || 
                    product.toLowerCase().includes(supplierProduct.toLowerCase())) {
                    if (!distribution.has(supplier.name)) {
                        distribution.set(supplier.name, []);
                    }
                    distribution.get(supplier.name).push(product);
                    found = true;
                    break;
                }
            }
            if (found) break;
        }
    }
    
    return distribution;
}

export async function handleOrder(sock, from, text, session, suppliers, ownerNumber) {
    try {
        console.log('üì® –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞');
        console.log('üìù –¢–µ–∫—Å—Ç –∑–∞–∫–∞–∑–∞:', text);
        console.log('üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:', from);
        console.log('üè¨ –õ–æ–∫–∞—Ü–∏—è:', session.location);
        console.log('üìÖ –î–∞—Ç–∞:', session.datetime);
        
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ
        const senderPhone = from.split('@')[0];
        const senderName = '–°–æ—Ç—Ä—É–¥–Ω–∏–∫';
        console.log('üì± –¢–µ–ª–µ—Ñ–æ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è:', senderPhone);
        
        // –†–∞–∑–±–∏–≤–∞–µ–º –∑–∞–∫–∞–∑ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
        const orderItems = splitOrderIntoProducts(text);
        console.log('üì¶ –†–∞–∑–±–∏—Ç—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:', orderItems);
        
        // –†–∞–∑–¥–µ–ª—è–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –Ω–∞ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ
        const knownProducts = [];
        const unknownProducts = [];
        
        for (const item of orderItems) {
            if (isProductInDatabase(item)) {
                knownProducts.push(item);
            } else {
                unknownProducts.push(item);
            }
        }
        
        console.log('‚úÖ –ò–∑–≤–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:', knownProducts);
        console.log('‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:', unknownProducts);
        
        // –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º
        const productDistribution = distributeProductsBySupplier(knownProducts);
        console.log('üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º:', Object.fromEntries(productDistribution));
        
        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∑–∞–∫–∞–∑–∞
        const orderId = uuidv4();
        const order = {
            id: orderId,
            location: session.location,
            datetime: session.datetime,
            items: knownProducts,
            unknownItems: unknownProducts,
            status: 'pending',
            sender: {
                name: senderName,
                phone: senderPhone
            },
            orderText: text
        };
        console.log('üìã –°–æ–∑–¥–∞–Ω –æ–±—ä–µ–∫—Ç –∑–∞–∫–∞–∑–∞:', order);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü—É
        let ownerMsg = `üÜï *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑*

üìç *–ó–∞–≤–µ–¥–µ–Ω–∏–µ:* ${order.location}
üìÖ *–î–∞—Ç–∞:* ${order.datetime}
üë§ *–û—Ç:* ${order.sender.name} (${order.sender.phone})

üìù *–ó–∞–∫–∞–∑:*
${knownProducts.map(item => `‚Ä¢ ${item}`).join('\n')}`;

        // –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫
        if (unknownProducts.length > 0) {
            ownerMsg += `\n\n‚ö†Ô∏è *–ü—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:*
${unknownProducts.map(item => `‚Ä¢ ${item}`).join('\n')}

‚ùóÔ∏è *–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —ç—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç—ã –∏ –¥–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã.*`;
        }

        ownerMsg += `\n\n‚ùóÔ∏è *–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–º:*

‚úÖ *–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑:*
\`–¥–æ–±—Ä–æ\`

‚ùå *–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑:*
\`–æ—Ç–∫–∞–∑\`

‚úèÔ∏è *–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑:*
\`—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\``;

        console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–ª–∞–¥–µ–ª—å—Ü—É');
        await sock.sendMessage(ownerNumber, { text: ownerMsg });

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –û–ª–∂–∞—Å—É –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        const olzhasMsg = `üÜï *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ*

üìç *–ó–∞–≤–µ–¥–µ–Ω–∏–µ:* ${order.location}
üìÖ *–î–∞—Ç–∞:* ${order.datetime}
üë§ *–û—Ç:* ${order.sender.name} (${order.sender.phone})

üìù *–ó–∞–∫–∞–∑:*
${knownProducts.map(item => `‚Ä¢ ${item}`).join('\n')}`;

        if (unknownProducts.length > 0) {
            olzhasMsg += `\n\n‚ö†Ô∏è *–ü—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:*
${unknownProducts.map(item => `‚Ä¢ ${item}`).join('\n')}

‚ùóÔ∏è *–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —ç—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç—ã –∏ –¥–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã.*`;
        }

        olzhasMsg += `\n\n‚ùóÔ∏è *–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–º:*

‚úÖ *–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑:*
\`–¥–æ–±—Ä–æ\`

‚ùå *–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑:*
\`–æ—Ç–∫–∞–∑\`

‚úèÔ∏è *–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑:*
\`—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\``;

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –û–ª–∂–∞—Å—É
        console.log('üîç –ü–æ–∏—Å–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –û–ª–∂–∞—Å');
        const olzhasSupplier = suppliers.find(s => s.name === '–û–ª–∂–∞—Å');
        if (olzhasSupplier) {
            console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –û–ª–∂–∞—Å—É');
            await sock.sendMessage(olzhasSupplier.phone + '@s.whatsapp.net', { text: olzhasMsg });
        } else {
            console.log('‚ö†Ô∏è –ü–æ—Å—Ç–∞–≤—â–∏–∫ –û–ª–∂–∞—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é —Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º –ø–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º
        let confirmationMsg = `‚úÖ *–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç*

–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.

üìç *–ó–∞–≤–µ–¥–µ–Ω–∏–µ:* ${order.location}
üìÖ *–î–∞—Ç–∞:* ${order.datetime}

üìù *–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –ø–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º:*`;

        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        for (const [supplier, products] of productDistribution) {
            confirmationMsg += `\n\n*${supplier}:*
${products.map(item => `‚Ä¢ ${item}`).join('\n')}`;
        }

        confirmationMsg += `\n\n‚ùóÔ∏è *–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–º:*

‚ùå *–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑:*
\`–æ—Ç–∫–∞–∑\`

‚úèÔ∏è *–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑:*
\`—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\``;

        console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é');
        await sock.sendMessage(from, { text: confirmationMsg });
        
        console.log('‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω');
        return { orderId, order };
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞:', error);
        console.error('Stack trace:', error.stack);
        await sock.sendMessage(from, { 
            text: `‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞*

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ –µ—â–µ —Ä–∞–∑.` 
        });
        return { orderId: null, order: null };
    }
} 