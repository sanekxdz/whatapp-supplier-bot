import { v4 as uuidv4 } from 'uuid';
import { parseOrder, isSimilar } from './parseOrder.js';
import { readFileSync } from 'fs';

const employees = JSON.parse(readFileSync('./db/employees.json', 'utf-8'));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞
function findMatchingSupplier(product, suppliers) {
  console.log('üîç –ü–æ–∏—Å–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞:', product);
  
  const normalizedProduct = product.toLowerCase().trim();
  console.log('üìù –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞:', normalizedProduct);
  
  for (const supplier of suppliers) {
    console.log('üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', supplier.name);
    for (const supplierProduct of supplier.products) {
      const normalizedSupplierProduct = supplierProduct.toLowerCase().trim();
      console.log('üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', normalizedSupplierProduct);
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é isSimilar –¥–ª—è –±–æ–ª–µ–µ –≥–∏–±–∫–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
      if (isSimilar(normalizedProduct, normalizedSupplierProduct)) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–æ—Å—Ç–∞–≤—â–∏–∫:', supplier.name);
        return supplier.name;
      }
    }
  }
  console.log('‚ùå –ü–æ—Å—Ç–∞–≤—â–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞:', product);
  return null;
}

export const handleOrder = async (sock, from, text, session, suppliers, ownerNumber) => {
  try {
    console.log('üì® –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞');
    console.log('üìù –¢–µ–∫—Å—Ç –∑–∞–∫–∞–∑–∞:', text);
    console.log('üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:', from);
    console.log('üè¨ –õ–æ–∫–∞—Ü–∏—è:', session.location);
    console.log('üìÖ –î–∞—Ç–∞:', session.datetime);
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ
    const senderPhone = from.split('@')[0];
    const senderName = '–°–æ—Ç—Ä—É–¥–Ω–∏–∫';
    console.log('üì± –¢–µ–ª–µ—Ñ–æ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è:', senderPhone);

    // –ü–∞—Ä—Å–∏–º –∑–∞–∫–∞–∑
    console.log('üîÑ –ù–∞—á–∞–ª–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∑–∞–∫–∞–∑–∞');
    const items = parseOrder(text);
    console.log('üì¶ –†–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:', items);
    
    if (!items || items.length === 0) {
      console.log('‚ùå –û—à–∏–±–∫–∞: –ø—É—Å—Ç–æ–π –∑–∞–∫–∞–∑');
      await sock.sendMessage(from, { 
        text: `‚ùå *–û—à–∏–±–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∑–∞–∫–∞–∑–∞*

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
_–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_

–ü—Ä–∏–º–µ—Ä—ã:
‚Ä¢ –ë—É–ª–æ—á–∫–∏ 30 —à—Ç
‚Ä¢ –ü–µ–ª—å–º–µ–Ω–∏ 5 –∫–≥
‚Ä¢ –°—Ç—Ä–∞—á–∞—Ç–µ–ª–ª–∞ 1 –∫–≥` 
      });
      return { orderId: null, order: null };
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –ø—Ä–æ–¥—É–∫—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º
    const matchedItems = [];
    const unmatchedItems = [];
    
    console.log('üîç –ù–∞—á–∞–ª–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤');
    for (const item of items) {
      console.log('üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–∞:', item);
      // –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –¥–æ –ø–µ—Ä–≤–æ–≥–æ —á–∏—Å–ª–∞
      const productName = item.split(/\d/)[0].trim();
      console.log('üìù –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞:', productName);
      
      const supplier = findMatchingSupplier(productName, suppliers);
      
      if (supplier) {
        console.log('‚úÖ –¢–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω —É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', supplier);
        matchedItems.push(item);
      } else {
        console.log('‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω —É –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤');
        unmatchedItems.push(item);
      }
    }

    // –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
    if (unmatchedItems.length > 0) {
      console.log('‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–æ–≤–∞—Ä—ã:', unmatchedItems);
      await sock.sendMessage(from, {
        text: `‚ö†Ô∏è *–í–Ω–∏–º–∞–Ω–∏–µ!*

–°–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤:
${unmatchedItems.map(item => `‚Ä¢ ${item}`).join('\n')}

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.`
      });
      return { orderId: null, order: null };
    }
    
    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∑–∞–∫–∞–∑–∞
    const orderId = uuidv4();
    const order = {
      id: orderId,
      location: session.location,
      datetime: session.datetime,
      items: matchedItems,
      status: 'pending',
      sender: {
        name: senderName,
        phone: senderPhone
      },
      orderText: matchedItems.join('\n')
    };
    console.log('üìã –°–æ–∑–¥–∞–Ω –æ–±—ä–µ–∫—Ç –∑–∞–∫–∞–∑–∞:', order);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü—É
    const ownerMsg = `üÜï *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑*

üìç *–ó–∞–≤–µ–¥–µ–Ω–∏–µ:* ${order.location}
üìÖ *–î–∞—Ç–∞:* ${order.datetime}
üë§ *–û—Ç:* ${order.sender.name} (${order.sender.phone})

üìù *–ó–∞–∫–∞–∑:*
${order.items.map(item => `‚Ä¢ ${item}`).join('\n')}

‚ùóÔ∏è *–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–º:*

‚úÖ *–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑:*
\`–¥–æ–±—Ä–æ\`

‚ùå *–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑:*
\`–æ—Ç–∫–∞–∑\`

‚úèÔ∏è *–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑:*
\`—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\``;

    console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–ª–∞–¥–µ–ª—å—Ü—É');
    await sock.sendMessage(ownerNumber, { text: ownerMsg });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –û–ª–∂–∞—Å—É –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    const olzhasMsg = `üÜï *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ*

üìç *–ó–∞–≤–µ–¥–µ–Ω–∏–µ:* ${order.location}
üìÖ *–î–∞—Ç–∞:* ${order.datetime}
üë§ *–û—Ç:* ${order.sender.name} (${order.sender.phone})

üìù *–ó–∞–∫–∞–∑:*
${order.items.map(item => `‚Ä¢ ${item}`).join('\n')}

‚ùóÔ∏è *–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–º:*

‚úÖ *–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑:*
\`–¥–æ–±—Ä–æ\`

‚ùå *–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑:*
\`–æ—Ç–∫–∞–∑\`

‚úèÔ∏è *–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑:*
\`—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\``;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –û–ª–∂–∞—Å—É
    console.log('üîç –ü–æ–∏—Å–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –û–ª–∂–∞—Å');
    const olzhasSupplier = suppliers.find(s => s.name === '–û–ª–∂–∞—Å');
    if (olzhasSupplier) {
      console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –û–ª–∂–∞—Å—É');
      await sock.sendMessage(olzhasSupplier.phone + '@s.whatsapp.net', { text: olzhasMsg });
    } else {
      console.log('‚ö†Ô∏è –ü–æ—Å—Ç–∞–≤—â–∏–∫ –û–ª–∂–∞—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é
    const confirmationMsg = `‚úÖ *–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç*

–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.

üìç *–ó–∞–≤–µ–¥–µ–Ω–∏–µ:* ${order.location}
üìÖ *–î–∞—Ç–∞:* ${order.datetime}

üìù *–ó–∞–∫–∞–∑:*
${order.items.map(item => `‚Ä¢ ${item}`).join('\n')}

‚ùóÔ∏è *–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–º:*

‚ùå *–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑:*
\`–æ—Ç–∫–∞–∑\`

‚úèÔ∏è *–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑:*
\`—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\``;

    console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é');
    await sock.sendMessage(from, { text: confirmationMsg });

    console.log('‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω');
    return { orderId, order };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞:', error);
    console.error('Stack trace:', error.stack);
    await sock.sendMessage(from, { 
      text: `‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞*

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ –µ—â–µ —Ä–∞–∑.` 
    });
    return { orderId: null, order: null };
  }
}; 