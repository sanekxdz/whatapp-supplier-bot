import { v4 as uuidv4 } from 'uuid';
import { readFileSync } from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞—Ö
const employeesPath = path.join(__dirname, '../db/employees.json');
const employees = JSON.parse(readFileSync(employeesPath, 'utf8'));

export async function handleOrder(sock, from, text, session, suppliers, ownerNumber) {
    try {
        console.log('üì® –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞');
        console.log('üìù –¢–µ–∫—Å—Ç –∑–∞–∫–∞–∑–∞:', text);
        console.log('üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:', from);
        console.log('üè¨ –õ–æ–∫–∞—Ü–∏—è:', session.location);
        console.log('üìÖ –î–∞—Ç–∞:', session.datetime);
        
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ
        const senderPhone = from.split('@')[0];
        const senderName = '–°–æ—Ç—Ä—É–¥–Ω–∏–∫';
        console.log('üì± –¢–µ–ª–µ—Ñ–æ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è:', senderPhone);
        
        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∑–∞–∫–∞–∑–∞
        const orderId = uuidv4();
        const order = {
            id: orderId,
            location: session.location,
            datetime: session.datetime,
            items: [text],
            status: 'pending',
            sender: {
                name: senderName,
                phone: senderPhone
            },
            orderText: text
        };
        console.log('üìã –°–æ–∑–¥–∞–Ω –æ–±—ä–µ–∫—Ç –∑–∞–∫–∞–∑–∞:', order);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü—É
        const ownerMsg = `üÜï *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑*

üìç *–ó–∞–≤–µ–¥–µ–Ω–∏–µ:* ${order.location}
üìÖ *–î–∞—Ç–∞:* ${order.datetime}
üë§ *–û—Ç:* ${order.sender.name} (${order.sender.phone})

üìù *–ó–∞–∫–∞–∑:*
${order.items.map(item => `‚Ä¢ ${item}`).join('\n')}

‚ùóÔ∏è *–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–º:*

‚úÖ *–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑:*
\`–¥–æ–±—Ä–æ\`

‚ùå *–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑:*
\`–æ—Ç–∫–∞–∑\`

‚úèÔ∏è *–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑:*
\`—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\``;

        console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–ª–∞–¥–µ–ª—å—Ü—É');
        await sock.sendMessage(ownerNumber, { text: ownerMsg });

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –û–ª–∂–∞—Å—É –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        const olzhasMsg = `üÜï *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ*

üìç *–ó–∞–≤–µ–¥–µ–Ω–∏–µ:* ${order.location}
üìÖ *–î–∞—Ç–∞:* ${order.datetime}
üë§ *–û—Ç:* ${order.sender.name} (${order.sender.phone})

üìù *–ó–∞–∫–∞–∑:*
${order.items.map(item => `‚Ä¢ ${item}`).join('\n')}

‚ùóÔ∏è *–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–º:*

‚úÖ *–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑:*
\`–¥–æ–±—Ä–æ\`

‚ùå *–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑:*
\`–æ—Ç–∫–∞–∑\`

‚úèÔ∏è *–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑:*
\`—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\``;

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –û–ª–∂–∞—Å—É
        console.log('üîç –ü–æ–∏—Å–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –û–ª–∂–∞—Å');
        const olzhasSupplier = suppliers.find(s => s.name === '–û–ª–∂–∞—Å');
        if (olzhasSupplier) {
            console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –û–ª–∂–∞—Å—É');
            await sock.sendMessage(olzhasSupplier.phone + '@s.whatsapp.net', { text: olzhasMsg });
        } else {
            console.log('‚ö†Ô∏è –ü–æ—Å—Ç–∞–≤—â–∏–∫ –û–ª–∂–∞—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é
        const confirmationMsg = `‚úÖ *–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç*

–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.

üìç *–ó–∞–≤–µ–¥–µ–Ω–∏–µ:* ${order.location}
üìÖ *–î–∞—Ç–∞:* ${order.datetime}

üìù *–ó–∞–∫–∞–∑:*
${order.items.map(item => `‚Ä¢ ${item}`).join('\n')}

‚ùóÔ∏è *–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–º:*

‚ùå *–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑:*
\`–æ—Ç–∫–∞–∑\`

‚úèÔ∏è *–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑:*
\`—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\``;

        console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é');
        await sock.sendMessage(from, { text: confirmationMsg });
        
        console.log('‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω');
        return { orderId, order };
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞:', error);
        console.error('Stack trace:', error.stack);
        await sock.sendMessage(from, { 
            text: `‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞*

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ –µ—â–µ —Ä–∞–∑.` 
        });
        return { orderId: null, order: null };
    }
} 