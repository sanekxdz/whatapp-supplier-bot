import { parseOrder } from './parseOrder.js';

export const handleSupplierFeedback = async (sock, from, text, activeOrders, suppliers, ownerNumber) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º
  const supplier = Object.entries(suppliers).find(([_, data]) => data.phone + '@s.whatsapp.net' === from);
  if (!supplier) return false;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º –æ –ø—Ä–æ–±–ª–µ–º–µ —Å –ø–æ—Å—Ç–∞–≤–∫–æ–π
  const isIssueReport = text.toLowerCase().includes('–Ω–µ –º–æ–≥—É –ø–æ—Å—Ç–∞–≤–∏—Ç—å') || 
                       text.toLowerCase().includes('–ø—Ä–æ–±–ª–µ–º–∞ —Å') ||
                       text.toLowerCase().includes('–Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

  if (!isIssueReport) return false;

  // –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  let problemProducts = [];
  const parts = text.toLowerCase().split(':');
  let productText = '';

  if (parts.length > 1) {
    productText = parts[1].trim();
  } else {
    // –ï—Å–ª–∏ –¥–≤–æ–µ—Ç–æ—á–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –æ–Ω–æ –≤ –∫–æ–Ω—Ü–µ, –∏—â–µ–º –ø–æ—Å–ª–µ —Ñ—Ä–∞–∑—ã "–Ω–µ –º–æ–≥—É –ø–æ—Å—Ç–∞–≤–∏—Ç—å" –∏–ª–∏ "–ø—Ä–æ–±–ª–µ–º–∞ —Å"
    if (text.toLowerCase().includes('–Ω–µ –º–æ–≥—É –ø–æ—Å—Ç–∞–≤–∏—Ç—å')) {
      productText = text.toLowerCase().replace('–Ω–µ –º–æ–≥—É –ø–æ—Å—Ç–∞–≤–∏—Ç—å', '').trim();
    } else if (text.toLowerCase().includes('–ø—Ä–æ–±–ª–µ–º–∞ —Å')) {
      productText = text.toLowerCase().replace('–ø—Ä–æ–±–ª–µ–º–∞ —Å', '').trim();
    }
  }

  if (productText) {
    const products = productText.split(',').map(p => p.trim());
    problemProducts = products.filter(p => p.length > 0);
  }

  if (problemProducts.length === 0) {
    await sock.sendMessage(from, {
      text: `‚ùå *–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞*

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ—Å–ª–µ —Ñ—Ä–∞–∑—ã "–Ω–µ –º–æ–≥—É –ø–æ—Å—Ç–∞–≤–∏—Ç—å" –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–≤–æ–µ—Ç–æ—á–∏–µ.

–ü—Ä–∏–º–µ—Ä—ã:
‚Ä¢ *–ù–µ –º–æ–≥—É –ø–æ—Å—Ç–∞–≤–∏—Ç—å: –û–≥—É—Ä—Ü—ã*
‚Ä¢ *–ù–µ –º–æ–≥—É –ø–æ—Å—Ç–∞–≤–∏—Ç—å –æ–≥—É—Ä—Ü—ã*
‚Ä¢ *–ü—Ä–æ–±–ª–µ–º–∞ —Å: –ü–æ–º–∏–¥–æ—Ä—ã, –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å*`
    });
    return true;
  }

  // –ù–∞—Ö–æ–¥–∏–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã —ç—Ç–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
  const relevantOrders = Object.entries(activeOrders)
    .filter(([_, order]) => {
      const orderProducts = order.orderText.split('\n');
      return orderProducts.some(op => {
        return problemProducts.some(pp => op.toLowerCase().includes(pp.toLowerCase()));
      });
    });

  if (relevantOrders.length === 0) {
    await sock.sendMessage(from, {
      text: `‚ùå *–û—à–∏–±–∫–∞*

–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏.`
    });
    return true;
  }

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∏ –∫–ª–∏–µ–Ω—Ç–∞–º
  for (const [orderId, order] of relevantOrders) {
    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    await sock.sendMessage(ownerNumber, {
      text: `‚ö†Ô∏è *–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ—Å—Ç–∞–≤–∫–æ–π*

üè¨ *–ó–∞–≤–µ–¥–µ–Ω–∏–µ:* ${order.location}
üìÖ *–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:* ${order.datetime}
üë§ *–ü–æ—Å—Ç–∞–≤—â–∏–∫:* ${supplier[0]}

‚ùå *–ù–µ –º–æ–∂–µ—Ç –ø–æ—Å—Ç–∞–≤–∏—Ç—å:*
${problemProducts.join('\n')}

üìã *ID –∑–∞–∫–∞–∑–∞:* ${orderId}`
    });

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
    await sock.sendMessage(order.from, {
      text: `‚ö†Ô∏è *–í–∞–∂–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ –∑–∞–∫–∞–∑—É*

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ—Å—Ç–∞–≤—â–∏–∫ —Å–æ–æ–±—â–∏–ª –æ –ø—Ä–æ–±–ª–µ–º–µ —Å –ø–æ—Å—Ç–∞–≤–∫–æ–π —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ–∑–∏—Ü–∏–π:
${problemProducts.join('\n')}

üìã *ID –∑–∞–∫–∞–∑–∞:* ${orderId}
üè¨ *–ó–∞–≤–µ–¥–µ–Ω–∏–µ:* ${order.location}
üìÖ *–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:* ${order.datetime}

–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω –∏ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.`
    });
  }

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫—É
  await sock.sendMessage(from, {
    text: `‚úÖ *–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ*

–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏ –∫–ª–∏–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω—ã –æ –ø—Ä–æ–±–ª–µ–º–µ —Å –ø–æ—Å—Ç–∞–≤–∫–æ–π —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ–∑–∏—Ü–∏–π:
${problemProducts.join('\n')}`
  });

  return true;
}; 